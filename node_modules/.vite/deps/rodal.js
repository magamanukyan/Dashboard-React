import {
  require_prop_types
} from "./chunk-VEAWOMMH.js";
import {
  require_react
} from "./chunk-6CE3F7YD.js";
import {
  __commonJS,
  __toESM
} from "./chunk-TFWDKVI3.js";

// node_modules/classnames/index.js
var require_classnames = __commonJS({
  "node_modules/classnames/index.js"(exports, module) {
    (function() {
      "use strict";
      var hasOwn = {}.hasOwnProperty;
      var nativeCodeString = "[native code]";
      function classNames() {
        var classes = [];
        for (var i = 0; i < arguments.length; i++) {
          var arg = arguments[i];
          if (!arg)
            continue;
          var argType = typeof arg;
          if (argType === "string" || argType === "number") {
            classes.push(arg);
          } else if (Array.isArray(arg)) {
            if (arg.length) {
              var inner = classNames.apply(null, arg);
              if (inner) {
                classes.push(inner);
              }
            }
          } else if (argType === "object") {
            if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
              classes.push(arg.toString());
              continue;
            }
            for (var key in arg) {
              if (hasOwn.call(arg, key) && arg[key]) {
                classes.push(key);
              }
            }
          }
        }
        return classes.join(" ");
      }
      if (typeof module !== "undefined" && module.exports) {
        classNames.default = classNames;
        module.exports = classNames;
      } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define("classnames", [], function() {
          return classNames;
        });
      } else {
        window.classNames = classNames;
      }
    })();
  }
});

// node_modules/rodal/lib/rodal.esm.js
var import_react = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
var import_classnames = __toESM(require_classnames());
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var IN_BROWSER = typeof window !== "undefined";
var UA = IN_BROWSER && window.navigator.userAgent.toLowerCase();
var IS_IE_9 = UA && UA.indexOf("msie 9.0") > 0;
var Dialog = function Dialog2(props) {
  var animation = (props.animationType === "enter" ? props.enterAnimation : props.leaveAnimation) || props.animation;
  var className = "rodal-dialog rodal-" + animation + "-" + props.animationType;
  var CloseButton = props.showCloseButton ? import_react.default.createElement("span", {
    className: "rodal-close",
    onClick: props.onClose,
    onKeyPress: function onKeyPress(event) {
      if (props.onClose && event.which === 13) {
        props.onClose(event);
      }
    },
    tabIndex: 0
  }) : null;
  var width = props.width, height = props.height, measure = props.measure, duration = props.duration, customStyles = props.customStyles, id = props.id;
  var style = {
    width: width + measure,
    height: height + measure,
    animationDuration: duration + "ms",
    WebkitAnimationDuration: duration + "ms"
  };
  var mergedStyles = _extends({}, style, customStyles);
  return import_react.default.createElement("div", {
    style: mergedStyles,
    className,
    id
  }, props.children, CloseButton);
};
var Rodal = function(_React$Component) {
  _inheritsLoose(Rodal2, _React$Component);
  function Rodal2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      isShow: false,
      animationType: "leave"
    };
    _this.onKeyUp = function(event) {
      if (!_this.props.closeOnEsc || event.keyCode !== 27) {
        return;
      }
      _this.props.onClose(event);
    };
    _this.animationEnd = function(event) {
      var animationType = _this.state.animationType;
      var _this$props = _this.props, closeOnEsc = _this$props.closeOnEsc, onAnimationEnd = _this$props.onAnimationEnd;
      if (animationType === "leave") {
        _this.setState({
          isShow: false
        });
      } else if (closeOnEsc) {
        _this.el.focus();
      }
      if (event.target === _this.el && onAnimationEnd) {
        onAnimationEnd();
      }
    };
    return _this;
  }
  var _proto = Rodal2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    if (this.props.visible) {
      this.enter();
    }
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    if (this.props.visible && !prevProps.visible) {
      this.enter();
    }
    if (!this.props.visible && prevProps.visible) {
      this.leave();
    }
  };
  _proto.enter = function enter() {
    this.setState({
      isShow: true,
      animationType: "enter"
    });
  };
  _proto.leave = function leave() {
    this.setState(IS_IE_9 ? {
      isShow: false
    } : {
      animationType: "leave"
    });
  };
  _proto.render = function render() {
    var _this2 = this;
    var _this$props2 = this.props, closeMaskOnClick = _this$props2.closeMaskOnClick, onClose = _this$props2.onClose, customMaskStyles = _this$props2.customMaskStyles, showMask = _this$props2.showMask, duration = _this$props2.duration, className = _this$props2.className, children = _this$props2.children;
    var _this$state = this.state, isShow = _this$state.isShow, animationType = _this$state.animationType;
    var Mask = showMask ? import_react.default.createElement("div", {
      className: "rodal-mask",
      style: customMaskStyles,
      onClick: closeMaskOnClick ? onClose : void 0
    }) : null;
    var style = {
      display: isShow ? "" : "none",
      animationDuration: duration + "ms",
      WebkitAnimationDuration: duration + "ms"
    };
    return import_react.default.createElement("div", {
      style,
      className: (0, import_classnames.default)("rodal", "rodal-fade-" + animationType, className),
      onAnimationEnd: this.animationEnd,
      tabIndex: "-1",
      ref: function ref(el) {
        _this2.el = el;
      },
      onKeyUp: this.onKeyUp
    }, Mask, import_react.default.createElement(Dialog, _extends({}, this.props, {
      animationType
    }), children));
  };
  return Rodal2;
}(import_react.default.Component);
Rodal.propTypes = {
  width: import_prop_types.default.number,
  height: import_prop_types.default.number,
  measure: import_prop_types.default.string,
  visible: import_prop_types.default.bool,
  showMask: import_prop_types.default.bool,
  closeOnEsc: import_prop_types.default.bool,
  closeMaskOnClick: import_prop_types.default.bool,
  showCloseButton: import_prop_types.default.bool,
  animation: import_prop_types.default.string,
  enterAnimation: import_prop_types.default.string,
  leaveAnimation: import_prop_types.default.string,
  duration: import_prop_types.default.number,
  className: import_prop_types.default.string,
  customStyles: import_prop_types.default.object,
  customMaskStyles: import_prop_types.default.object,
  onClose: import_prop_types.default.func.isRequired,
  onAnimationEnd: import_prop_types.default.func,
  id: import_prop_types.default.string
};
Rodal.defaultProps = {
  width: 400,
  height: 240,
  measure: "px",
  visible: false,
  showMask: true,
  closeOnEsc: false,
  closeMaskOnClick: true,
  showCloseButton: true,
  animation: "zoom",
  enterAnimation: "",
  leaveAnimation: "",
  duration: 300,
  className: "",
  customStyles: {},
  customMaskStyles: {}
};
var rodal_esm_default = Rodal;
export {
  rodal_esm_default as default
};
/*! Bundled license information:

classnames/index.js:
  (*!
  	Copyright (c) 2018 Jed Watson.
  	Licensed under the MIT License (MIT), see
  	http://jedwatson.github.io/classnames
  *)
*/
//# sourceMappingURL=rodal.js.map
